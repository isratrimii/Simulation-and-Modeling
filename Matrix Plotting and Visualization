A = np.random.rand(15)
B = np.random.rand(15)
print(A)
print(B)

# Flatten the matrices to create sequences for plotting
A_flat = A.flatten()
B_flat = B.flatten()

# Create an index for x-axis
x = np.arange(len(A_flat))
print(x)

# Plot the data
plt.plot(x, A_flat, marker='o', linestyle='-', label="Matrix A")
plt.plot(x, B_flat, marker='s', linestyle='--', label="Matrix B")

# Labels and title
plt.xlabel("Index")
plt.ylabel("Value")
plt.title("Line Graph of Flattened Matrices A and B")
plt.legend()
plt.grid(True)

# Show the plot
plt.show()

# Create two random 3x3 matrices with integer values between 0 and 10
A = np.random.randint(0, 10, size=(3, 3))  # Random integers between 0 and 9
B = np.random.randint(0, 10, size=(3, 3))  # Random integers between 0 and 9

print("Matrix A:\n", A)
print("Matrix B:\n", B)

# Matrix operations
matrix_sum = A + B  # Matrix addition
matrix_diff = A - B  # Matrix subtraction
matrix_prod = np.dot(A, B)  # Matrix multiplication (dot product)

# Bar plot to visualize results
fig, axes = plt.subplots(1, 3, figsize=(15, 5)) #figure object, subplot array

# Sum
axes[0].bar(range(1, 10), matrix_sum.flatten(), color='b')
axes[0].set_title('Matrix Addition')
axes[0].set_xlabel('Index')
axes[0].set_ylabel('Value')

# Difference
axes[1].bar(range(1, 10), matrix_diff.flatten(), color='g')
axes[1].set_title('Matrix Subtraction')
axes[1].set_xlabel('Index')
axes[1].set_ylabel('Value')

# Product
axes[2].bar(range(1, 10), matrix_prod.flatten(), color='r')
axes[2].set_title('Matrix Multiplication')
axes[2].set_xlabel('Index')
axes[2].set_ylabel('Value')

plt.tight_layout() #plt.tight_layout() is a Matplotlib function that automatically adjusts the layout of subplots and figures to prevent overlapping and ensure a visually appealing presentation. It modifies the spacing between subplots, axes, labels, and titles to improve readability.
plt.show()



matrix = np.random.rand(4, 4) #by default [0,1) which includes 0 but excludes 1
print(matrix)
# Plot the heatmap
sns.heatmap(matrix, annot=True, cmap='coolwarm', linewidths=0.5, linecolor ='black')
plt.title('Heatmap of 3x3 Matrix')
plt.show()
